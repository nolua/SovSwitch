"GhdMOQbsna4="
"o1KMlYvopR/12kD+ps4pSA=="

si verif ip(ftp)
	si copie ftp fichier
		pour tout les switchs
			si verif ip(switch)
				si ping switch
					si sauv switch
						log ok sauv switch 
					sinon
						log erreur sauv switch
				sinon 
					log erreur ping switch
			sinon
				log erreur bad ip
		fin pour tout les switch
	sinon 
		log erreur copie fichier ftp
sinon
	log erreur bad ip ftp
	
@ipSwitchs => tableau de string (@ip)
@ipFtp => string (@ip)

fonction Log
fonction VerifIp
fonction CopyFtpFile
fonction BackupSwitch
sauvegarder avec la recuperation du nom du switch
reorganiser le log - fait
verification existence fichier log temp - fait
mettre le username du switch dans le fichier config - fait
passer en arguement le sel dans check.cs
gestion de la taille des log
créé les repertoires de prog et de log
gestion de l'erreur si mot de passe switch different + gestion de la remonté de l'etat du backup
faire un saut de ligne dasn le log temporaire entre chaque sauvegarde de switch 

verif ligne de commande
	si oui => on execute la commande
	sinon 
	verif pidfile => (bool)VerifyPidFile
		si present on sort => log erreur dans pidfile.log
		sinon on créé le fichier et on continu
	si logtemp
		on efface logtemp
		on créé un logtemp avec timestamp
			verif taille log final
			si plus grand que valeur
				on copie le fichier en le zippant
			verif ftp => (bool)bVerifFtp
				si non valide on sort => log erreur
				sinon verif mot de passe (bool)bVerifPassword
				si non valide on sort => log erreur
				sinon on continu
				pour chaque switch
					verif adresse (bool)verifAdressSwitch
					si non valide on sort => log erreur
					sinon on continu
					verif ping (bool) VerifPingSwitch
					si non valide on sort => log erreur
					sinon on sauvegarde le switch => log sauvegarde
						si erreur => log erreur
						sinon => log sauvegarde
				fin pour chaque switch
	
	envoimail logtemp  => log erreur
	fin logtemp avec timestamp
	copy logtemp => logfinal
	efface pidfile

